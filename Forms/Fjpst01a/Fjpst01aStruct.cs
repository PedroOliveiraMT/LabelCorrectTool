
//----------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------------------
using Foundations.Core.AppSupportLib.Runtime.ControlsModel;
using Foundations.Core.AppSupportLib.Runtime.ControlsModel.Containers;
using Foundations.Core.AppSupportLib.Runtime.ControlsModel.Alerts;
using Foundations.Core.AppSupportLib.Runtime.ControlsModel.Lovs;
using Foundations.Flavors.Forms;
using Foundations.Flavors.Forms.Descriptors;
using Foundations.Core.AppSupportLib.Runtime.Task;
using Foundations.Core.AppSupportLib.Composition;
using System.Globalization;

namespace Alio.Forms.Fjpst01a
{	
 
	public partial class Fjpst01aTaskBlocks
	{ 
		public Fjpst01aTaskBlocks(Fjpst01aTask task)
		{
			Batches = new BatchesBlockDescriptor(task);
			OkCancel = new OkCancelBlockDescriptor(task);
		}		

		public BatchesBlockDescriptor Batches { get; private set; }
		public OkCancelBlockDescriptor OkCancel { get; private set; }


		public class BatchesBlockDescriptor : BlockDescriptorWrapper
        {
            public BatchesBlockDescriptor(AbstractTask task) : base("BATCHES", task)
            {
                Items = new BatchesItems(this);
            }
            public BatchesItems Items { get; private set; }

            public class BatchesItems
            {
                public BatchesItems(BlockDescriptorWrapper block)
                {
					BatchYear = block.FindItem("BATCH_YEAR");
					BatchNo = block.FindItem("BATCH_NO");
					DateCreated = block.FindItem("DATE_CREATED");
					BatchDate = block.FindItem("BATCH_DATE");
					BatchDescription = block.FindItem("BATCH_DESCRIPTION");
					AccountPeriod = block.FindItem("ACCOUNT_PERIOD");
					PostBatch = block.FindItem("POST_BATCH");
					DebitTotal = block.FindItem("DEBIT_TOTAL");
					CreditTotal = block.FindItem("CREDIT_TOTAL");
					Details = block.FindItem("DETAILS");
					PostedFlag = block.FindItem("POSTED_FLAG");
					UserId = block.FindItem("USER_ID");
					BatchType = block.FindItem("BATCH_TYPE");
					BatchOrigin = block.FindItem("BATCH_ORIGIN");
					AccessFlag = block.FindItem("ACCESS_FLAG");
 
                }

				public ItemDescriptorWrapper BatchYear { get; private set; }
				public ItemDescriptorWrapper BatchNo { get; private set; }
				public ItemDescriptorWrapper DateCreated { get; private set; }
				public ItemDescriptorWrapper BatchDate { get; private set; }
				public ItemDescriptorWrapper BatchDescription { get; private set; }
				public ItemDescriptorWrapper AccountPeriod { get; private set; }
				public ItemDescriptorWrapper PostBatch { get; private set; }
				public ItemDescriptorWrapper DebitTotal { get; private set; }
				public ItemDescriptorWrapper CreditTotal { get; private set; }
				public ItemDescriptorWrapper Details { get; private set; }
				public ItemDescriptorWrapper PostedFlag { get; private set; }
				public ItemDescriptorWrapper UserId { get; private set; }
				public ItemDescriptorWrapper BatchType { get; private set; }
				public ItemDescriptorWrapper BatchOrigin { get; private set; }
				public ItemDescriptorWrapper AccessFlag { get; private set; }
 
            }
        }
		public class OkCancelBlockDescriptor : BlockDescriptorWrapper
        {
            public OkCancelBlockDescriptor(AbstractTask task) : base("OK_CANCEL", task)
            {
                Items = new OkCancelItems(this);
            }
            public OkCancelItems Items { get; private set; }

            public class OkCancelItems
            {
                public OkCancelItems(BlockDescriptorWrapper block)
                {
					SelectAll = block.FindItem("SELECT_ALL");
					Post = block.FindItem("POST");
					Cancel = block.FindItem("CANCEL");
 
                }

				public ItemDescriptorWrapper SelectAll { get; private set; }
				public ItemDescriptorWrapper Post { get; private set; }
				public ItemDescriptorWrapper Cancel { get; private set; }
 
            }
        }
 
	}
  

	public partial class Fjpst01aTaskWindows 
	{ 
		public Fjpst01aTaskWindows(Fjpst01aTask task)
		{
			PostJeData = new WindowDescriptorWrapper(task.FindWindow("POST_JE_DATA"));
		}
		public WindowDescriptor PostJeData { get; private set; }
	}

	public partial class Fjpst01aTaskCanvases
	{ 
		public Fjpst01aTaskCanvases(Fjpst01aTask task)
		{
			PostJeData = new CanvasDescriptorWrapper(task.FindCanvas("POST_JE_DATA"));
		}
		public CanvasDescriptor PostJeData { get; private set; }
  
	}
  

	public partial class Fjpst01aTaskAlerts
	{ 
		public Fjpst01aTaskAlerts(Fjpst01aTask task)
		{
			NoRecord = new AlertDescriptorWrapper(task.FindAlert("NO_RECORD"));
			OnMessage = new AlertDescriptorWrapper(task.FindAlert("ON_MESSAGE"));
			OnErrorCaution = new AlertDescriptorWrapper(task.FindAlert("ON_ERROR_CAUTION"));
			OnErrorStop = new AlertDescriptorWrapper(task.FindAlert("ON_ERROR_STOP"));
		}
		public AlertDescriptor NoRecord { get; private set; }
		public AlertDescriptor OnMessage { get; private set; }
		public AlertDescriptor OnErrorCaution { get; private set; }
		public AlertDescriptor OnErrorStop { get; private set; }
  
	}
  

  
}
  