
//----------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------------------
using Foundations.Core.AppSupportLib.Runtime.ControlsModel;
using Foundations.Core.AppSupportLib.Runtime.ControlsModel.Containers;
using Foundations.Core.AppSupportLib.Runtime.ControlsModel.Alerts;
using Foundations.Core.AppSupportLib.Runtime.ControlsModel.Lovs;
using Foundations.Flavors.Forms;
using Foundations.Flavors.Forms.Descriptors;
using Foundations.Core.AppSupportLib.Runtime.Task;
using Foundations.Core.AppSupportLib.Composition;
using System.Globalization;

namespace Alio.Forms.Ssutl01a
{	
 
	public partial class Ssutl01aTaskBlocks
	{ 
		public Ssutl01aTaskBlocks(Ssutl01aTask task)
		{
			SecurityBlock = new SecurityBlockBlockDescriptor(task);
		}		

		public SecurityBlockBlockDescriptor SecurityBlock { get; private set; }


		public class SecurityBlockBlockDescriptor : BlockDescriptorWrapper
        {
            public SecurityBlockBlockDescriptor(AbstractTask task) : base("SECURITY_BLOCK", task)
            {
                Items = new SecurityBlockItems(this);
            }
            public SecurityBlockItems Items { get; private set; }

            public class SecurityBlockItems
            {
                public SecurityBlockItems(BlockDescriptorWrapper block)
                {
					SecurityDate = block.FindItem("SECURITY_DATE");
					SecurityKey = block.FindItem("SECURITY_KEY");
					CounterKey = block.FindItem("COUNTER_KEY");
					Process = block.FindItem("PROCESS");
					WaiverKey = block.FindItem("WAIVER_KEY");
 
                }

				public ItemDescriptorWrapper SecurityDate { get; private set; }
				public ItemDescriptorWrapper SecurityKey { get; private set; }
				public ItemDescriptorWrapper CounterKey { get; private set; }
				public ItemDescriptorWrapper Process { get; private set; }
				public ItemDescriptorWrapper WaiverKey { get; private set; }
 
            }
        }
 
	}
  

	public partial class Ssutl01aTaskWindows 
	{ 
		public Ssutl01aTaskWindows(Ssutl01aTask task)
		{
			Ssutl01a = new WindowDescriptorWrapper(task.FindWindow("SSUTL01A"));
		}
		public WindowDescriptor Ssutl01a { get; private set; }
	}

	public partial class Ssutl01aTaskCanvases
	{ 
		public Ssutl01aTaskCanvases(Ssutl01aTask task)
		{
			Canvas1 = new CanvasDescriptorWrapper(task.FindCanvas("CANVAS_1"));
		}
		public CanvasDescriptor Canvas1 { get; private set; }
  
	}
  

	public partial class Ssutl01aTaskAlerts
	{ 
		public Ssutl01aTaskAlerts(Ssutl01aTask task)
		{
			NoRecord = new AlertDescriptorWrapper(task.FindAlert("NO_RECORD"));
			OnMessage = new AlertDescriptorWrapper(task.FindAlert("ON_MESSAGE"));
			OnErrorCaution = new AlertDescriptorWrapper(task.FindAlert("ON_ERROR_CAUTION"));
			OnErrorStop = new AlertDescriptorWrapper(task.FindAlert("ON_ERROR_STOP"));
		}
		public AlertDescriptor NoRecord { get; private set; }
		public AlertDescriptor OnMessage { get; private set; }
		public AlertDescriptor OnErrorCaution { get; private set; }
		public AlertDescriptor OnErrorStop { get; private set; }
  
	}
  

  
}
  