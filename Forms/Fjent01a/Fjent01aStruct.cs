
//----------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------------------
using Foundations.Core.AppSupportLib.Runtime.ControlsModel;
using Foundations.Core.AppSupportLib.Runtime.ControlsModel.Containers;
using Foundations.Core.AppSupportLib.Runtime.ControlsModel.Alerts;
using Foundations.Core.AppSupportLib.Runtime.ControlsModel.Lovs;
using Foundations.Flavors.Forms;
using Foundations.Flavors.Forms.Descriptors;
using Foundations.Core.AppSupportLib.Runtime.Task;
using Foundations.Core.AppSupportLib.Composition;
using System.Globalization;

namespace Alio.Forms.Fjent01a
{	
 
	public partial class Fjent01aTaskBlocks
	{ 
		public Fjent01aTaskBlocks(Fjent01aTask task)
		{
			JeHeader = new JeHeaderBlockDescriptor(task);
			JeData = new JeDataBlockDescriptor(task);
			BatchNoBlock = new BatchNoBlockBlockDescriptor(task);
		}		

		public JeHeaderBlockDescriptor JeHeader { get; private set; }
		public JeDataBlockDescriptor JeData { get; private set; }
		public BatchNoBlockBlockDescriptor BatchNoBlock { get; private set; }


		public class JeHeaderBlockDescriptor : BlockDescriptorWrapper
        {
            public JeHeaderBlockDescriptor(AbstractTask task) : base("JE_HEADER", task)
            {
                Items = new JeHeaderItems(this);
            }
            public JeHeaderItems Items { get; private set; }

            public class JeHeaderItems
            {
                public JeHeaderItems(BlockDescriptorWrapper block)
                {
					AssignReference = block.FindItem("ASSIGN_REFERENCE");
					ReferenceNo = block.FindItem("REFERENCE_NO");
					JournalDate = block.FindItem("JOURNAL_DATE");
					JournalDescription = block.FindItem("JOURNAL_DESCRIPTION");
					ReadyForApproval = block.FindItem("READY_FOR_APPROVAL");
					Spreasdsheet = block.FindItem("SPREASDSHEET");
					ApprovalStatusDesc = block.FindItem("APPROVAL_STATUS_DESC");
					ViewButton = block.FindItem("VIEW_BUTTON");
					BatchYear = block.FindItem("BATCH_YEAR");
					BatchNo = block.FindItem("BATCH_NO");
					DebitTotal = block.FindItem("DEBIT_TOTAL");
					CreditTotal = block.FindItem("CREDIT_TOTAL");
					WhsOrderNo = block.FindItem("WHS_ORDER_NO");
					NextLineNo = block.FindItem("NEXT_LINE_NO");
					ApprovalStatus = block.FindItem("APPROVAL_STATUS");
					SystemOwner = block.FindItem("SYSTEM_OWNER");
					DisplayReferenceNo = block.FindItem("DISPLAY_REFERENCE_NO");
					ApprovalChain = block.FindItem("APPROVAL_CHAIN");
					ApprovalChainButton = block.FindItem("APPROVAL_CHAIN_BUTTON");
 
                }

				public ItemDescriptorWrapper AssignReference { get; private set; }
				public ItemDescriptorWrapper ReferenceNo { get; private set; }
				public ItemDescriptorWrapper JournalDate { get; private set; }
				public ItemDescriptorWrapper JournalDescription { get; private set; }
				public ItemDescriptorWrapper ReadyForApproval { get; private set; }
				public ItemDescriptorWrapper Spreasdsheet { get; private set; }
				public ItemDescriptorWrapper ApprovalStatusDesc { get; private set; }
				public ItemDescriptorWrapper ViewButton { get; private set; }
				public ItemDescriptorWrapper BatchYear { get; private set; }
				public ItemDescriptorWrapper BatchNo { get; private set; }
				public ItemDescriptorWrapper DebitTotal { get; private set; }
				public ItemDescriptorWrapper CreditTotal { get; private set; }
				public ItemDescriptorWrapper WhsOrderNo { get; private set; }
				public ItemDescriptorWrapper NextLineNo { get; private set; }
				public ItemDescriptorWrapper ApprovalStatus { get; private set; }
				public ItemDescriptorWrapper SystemOwner { get; private set; }
				public ItemDescriptorWrapper DisplayReferenceNo { get; private set; }
				public ItemDescriptorWrapper ApprovalChain { get; private set; }
				public ItemDescriptorWrapper ApprovalChainButton { get; private set; }
 
            }
        }
		public class JeDataBlockDescriptor : BlockDescriptorWrapper
        {
            public JeDataBlockDescriptor(AbstractTask task) : base("JE_DATA", task)
            {
                Items = new JeDataItems(this);
            }
            public JeDataItems Items { get; private set; }

            public class JeDataItems
            {
                public JeDataItems(BlockDescriptorWrapper block)
                {
					AccountNo = block.FindItem("ACCOUNT_NO");
					ShowLov = block.FindItem("SHOW_LOV");
					DrAmount = block.FindItem("DR_AMOUNT");
					CrAmount = block.FindItem("CR_AMOUNT");
					ReferenceNo = block.FindItem("REFERENCE_NO");
					LineNo = block.FindItem("LINE_NO");
					JournalAmount = block.FindItem("JOURNAL_AMOUNT");
					AccountId = block.FindItem("ACCOUNT_ID");
					DebitCreditFlag = block.FindItem("DEBIT_CREDIT_FLAG");
					DrTotal = block.FindItem("DR_TOTAL");
					CrTotal = block.FindItem("CR_TOTAL");
					AccountDesc = block.FindItem("ACCOUNT_DESC");
					HoldAccountId = block.FindItem("HOLD_ACCOUNT_ID");
					HoldJournalAmount = block.FindItem("HOLD_JOURNAL_AMOUNT");
					HoldDrAmount = block.FindItem("HOLD_DR_AMOUNT");
					HoldCrAmount = block.FindItem("HOLD_CR_AMOUNT");
					AccountBalance = block.FindItem("ACCOUNT_BALANCE");
 
                }

				public ItemDescriptorWrapper AccountNo { get; private set; }
				public ItemDescriptorWrapper ShowLov { get; private set; }
				public ItemDescriptorWrapper DrAmount { get; private set; }
				public ItemDescriptorWrapper CrAmount { get; private set; }
				public ItemDescriptorWrapper ReferenceNo { get; private set; }
				public ItemDescriptorWrapper LineNo { get; private set; }
				public ItemDescriptorWrapper JournalAmount { get; private set; }
				public ItemDescriptorWrapper AccountId { get; private set; }
				public ItemDescriptorWrapper DebitCreditFlag { get; private set; }
				public ItemDescriptorWrapper DrTotal { get; private set; }
				public ItemDescriptorWrapper CrTotal { get; private set; }
				public ItemDescriptorWrapper AccountDesc { get; private set; }
				public ItemDescriptorWrapper HoldAccountId { get; private set; }
				public ItemDescriptorWrapper HoldJournalAmount { get; private set; }
				public ItemDescriptorWrapper HoldDrAmount { get; private set; }
				public ItemDescriptorWrapper HoldCrAmount { get; private set; }
				public ItemDescriptorWrapper AccountBalance { get; private set; }
 
            }
        }
		public class BatchNoBlockBlockDescriptor : BlockDescriptorWrapper
        {
            public BatchNoBlockBlockDescriptor(AbstractTask task) : base("BATCH_NO_BLOCK", task)
            {
                Items = new BatchNoBlockItems(this);
            }
            public BatchNoBlockItems Items { get; private set; }

            public class BatchNoBlockItems
            {
                public BatchNoBlockItems(BlockDescriptorWrapper block)
                {
					NavigableItem1 = block.FindItem("NAVIGABLE_ITEM_1");
					BatchDate = block.FindItem("BATCH_DATE");
					BatchNo = block.FindItem("BATCH_NO");
					BatchYear = block.FindItem("BATCH_YEAR");
					AccountingPeriod = block.FindItem("ACCOUNTING_PERIOD");
					SaveFlag = block.FindItem("SAVE_FLAG");
 
                }

				public ItemDescriptorWrapper NavigableItem1 { get; private set; }
				public ItemDescriptorWrapper BatchDate { get; private set; }
				public ItemDescriptorWrapper BatchNo { get; private set; }
				public ItemDescriptorWrapper BatchYear { get; private set; }
				public ItemDescriptorWrapper AccountingPeriod { get; private set; }
				public ItemDescriptorWrapper SaveFlag { get; private set; }
 
            }
        }
 
	}
  

	public partial class Fjent01aTaskWindows 
	{ 
		public Fjent01aTaskWindows(Fjent01aTask task)
		{
			JournalEntry = new WindowDescriptorWrapper(task.FindWindow("JOURNAL_ENTRY"));
		}
		public WindowDescriptor JournalEntry { get; private set; }
	}

	public partial class Fjent01aTaskCanvases
	{ 
		public Fjent01aTaskCanvases(Fjent01aTask task)
		{
			JouralEntry = new CanvasDescriptorWrapper(task.FindCanvas("JOURAL_ENTRY"));
		}
		public CanvasDescriptor JouralEntry { get; private set; }
  
	}
  

	public partial class Fjent01aTaskAlerts
	{ 
		public Fjent01aTaskAlerts(Fjent01aTask task)
		{
			OverBudgetNoOverride = new AlertDescriptorWrapper(task.FindAlert("OVER_BUDGET_NO_OVERRIDE"));
			OverBudgetOverride = new AlertDescriptorWrapper(task.FindAlert("OVER_BUDGET_OVERRIDE"));
			OnErrorStop = new AlertDescriptorWrapper(task.FindAlert("ON_ERROR_STOP"));
			OnErrorCaution = new AlertDescriptorWrapper(task.FindAlert("ON_ERROR_CAUTION"));
			OnMessage = new AlertDescriptorWrapper(task.FindAlert("ON_MESSAGE"));
			AccountAlert = new AlertDescriptorWrapper(task.FindAlert("ACCOUNT_ALERT"));
			NoRecord = new AlertDescriptorWrapper(task.FindAlert("NO_RECORD"));
			DebitCredit = new AlertDescriptorWrapper(task.FindAlert("DEBIT_CREDIT"));
			SpreadsheetAlert = new AlertDescriptorWrapper(task.FindAlert("SPREADSHEET_ALERT"));
		}
		public AlertDescriptor OverBudgetNoOverride { get; private set; }
		public AlertDescriptor OverBudgetOverride { get; private set; }
		public AlertDescriptor OnErrorStop { get; private set; }
		public AlertDescriptor OnErrorCaution { get; private set; }
		public AlertDescriptor OnMessage { get; private set; }
		public AlertDescriptor AccountAlert { get; private set; }
		public AlertDescriptor NoRecord { get; private set; }
		public AlertDescriptor DebitCredit { get; private set; }
		public AlertDescriptor SpreadsheetAlert { get; private set; }
  
	}
  

	public partial class Fjent01aTaskLovs
	{ 
		public Fjent01aTaskLovs(Fjent01aTask task)
		{
			ApprovalChains = new LovDescriptorWrapper(task.FindLov("APPROVAL_CHAINS"));
		}
		public LovDescriptor ApprovalChains { get; private set; }
  
	}
  
}
  